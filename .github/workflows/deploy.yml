name: Deploy Services

on:
  push:
    paths: 
      - 'api-svc-*/**'
      - 'worker-*/**'
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy'
        required: true
        default: 'api-svc-a'
      environment:
        description: 'Environment'
        required: true
        default: 'dev'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changes.outputs.services }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
          
      - name: Detect changed services
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "services=[\"${{ github.event.inputs.service }}\"]" >> $GITHUB_OUTPUT
          else
            # Detect changed services from git diff
            CHANGED=$(git diff --name-only HEAD~1 HEAD | grep -E '^(api-svc-|worker-)' | cut -d'/' -f1 | sort -u | jq -R -s -c 'split("\n")[:-1]')
            echo "services=$CHANGED" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: detect-changes
    if: needs.detect-changes.outputs.services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    
    steps:
      - name: Checkout monorepo
        uses: actions/checkout@v3
        
      - name: Checkout infra repo
        uses: actions/checkout@v3
        with:
          repository: tintranvan/flodesk-demo-infra
          path: infra
          token: ${{ secrets.GITHUB_INFRA_REPO_TOKEN }}
          
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          pip install pyyaml
          
      - name: Configure AWS
        run: |
          # Use AWS profile from local credentials
          export AWS_PROFILE=esoftvn-researching
          aws sts get-caller-identity
          
      - name: Generate Terraform
        run: |
          cd infra
          python3 scripts/generate-service-infra.py ../${{ matrix.service }} ${{ github.event.inputs.environment || 'dev' }}
          
      - name: Build Go service
        run: |
          mkdir -p build/${{ matrix.service }}
          GOOS=linux GOARCH=arm64 go build -o build/${{ matrix.service }}/bootstrap ${{ matrix.service }}/main.go
          cd build/${{ matrix.service }}
          zip -r ../${{ matrix.service }}.zip .
          
      - name: Deploy infrastructure
        run: |
          cd infra/terraform/services/${{ github.event.inputs.environment || 'dev' }}
          terraform init
          terraform plan -var="environment=${{ github.event.inputs.environment || 'dev' }}" -out=tfplan
          terraform apply tfplan
          
      - name: Deploy Lambda code
        run: |
          FUNCTION_NAME="${{ github.event.inputs.environment || 'dev' }}-${{ matrix.service }}"
          aws lambda update-function-code \
            --function-name "$FUNCTION_NAME" \
            --zip-file "fileb://build/${{ matrix.service }}.zip"
